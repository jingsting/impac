cmake_minimum_required(VERSION 3.8)

# Allow CMake to find modules in the cmake directory
project(impac VERSION 1.0.0 LANGUAGES CXX)

# Library interface for Magick++
find_package(ImageMagick REQUIRED COMPONENTS Magick++)
add_library(ImageMagick::Magick++ INTERFACE IMPORTED)
set_target_properties(ImageMagick::Magick++ PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${ImageMagick_INCLUDE_DIRS}"
    INTERFACE_LINK_LIBRARIES "${ImageMagick_LIBRARIES}"
    INTERFACE_COMPILE_DEFINITIONS
    "MAGICKCORE_HDRI_ENABLE=0;MAGICKCORE_QUANTUM_DEPTH=16"
    )

# Library interface for Boost::filesystem (autogenerated by FindBoost.cmake)
find_package(Boost 1.6 REQUIRED COMPONENTS filesystem)

# Library interface for Catch2::Catch
add_library(Catch2::Catch INTERFACE IMPORTED)
set_target_properties(Catch2::Catch PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES ${PROJECT_SOURCE_DIR}/extern/catch2
    )

# Library interface for Nlohmann::json
add_library(nlohmann_json::nlohmann_json INTERFACE IMPORTED)
set_target_properties(nlohmann_json::nlohmann_json PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES ${PROJECT_SOURCE_DIR}/extern/nlohmann
    )

# Main static library to be linked by impac executable and test exectuable
add_library(libimpac
    src/sprite.cpp
    src/sprite_sheet.cpp
    src/pack/first_fit.cpp
    )
target_compile_options(libimpac PRIVATE -Wall)
target_compile_features(libimpac PUBLIC cxx_std_17)
target_include_directories(libimpac PUBLIC
    "${CMAKE_CURRENT_SOURCE_DIR}/src"
    )
# Link Boost::filesystem and ImageMagick::Magick++
target_link_libraries(libimpac PUBLIC
    Boost::filesystem
    ImageMagick::Magick++
    nlohmann_json::nlohmann_json
    )

# Main executable target
add_executable(impac src/impac.cpp)
target_compile_options(impac PRIVATE -Wall)
target_compile_features(impac PRIVATE cxx_std_17)
target_link_libraries(impac libimpac)

# Test executable target
add_executable(test
    test/test.cpp
    test/test_sprite.cpp
    test/test_sprite_sheet.cpp
    test/test_pack_first_fit.cpp
    )
target_compile_options(test PRIVATE -Wall)
target_compile_features(test PRIVATE cxx_std_17)
target_link_libraries(test PRIVATE libimpac Catch2::Catch)
